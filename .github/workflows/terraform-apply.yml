name: 'Build/Push + Terraform Apply'

on:
  push:
    branches: ["main", "main-test" ]
  # workflow_run:
  #   workflows: ['Docker Push to ECR']
  #   branches: ["main", "main-test" ]
  #   types:
  #     - completed
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: "example-org-c73f1f"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "CD-CD_demo"
  CONFIG_DIRECTORY: "./"

jobs:
  build-push:
    name: Build/Push Docker Image
    runs-on: ubuntu-latest  
    steps:  
        - name: Checkout
          uses: actions/checkout@v4    
          
        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.PUSHER_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.PUSHER_AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}

        - name: Login to Amazon ECR
          id: login-pf-aws-ecr
          uses: aws-actions/amazon-ecr-login@v2
          
        - name: Build and push the tagged docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: hasty-paste-manual  # ${{secrets.AWS_ECR_REPO}}
            IMAGE_TAG: latest
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  ecr-scan:
    name: Build/Push Docker Image
    needs: build-push
    runs-on: ubuntu-latest  
    steps:
      - name: Scan Docker image
        id: docker-scan
        uses: alexjurkiewicz/ecr-scan-image@v1.7.1
        with:
          repository: hasty-paste-manual  # myorg/myimage
          tag: ${{ steps.docker-build.outputs.tag }}
          fail_threshold: critical
          # ignore_list: |
          #   CVE-2014-7654321
          #   CVE-2014-456132
      # Access scan results in later steps
      - run: echo "ECR-Scan findings: ${{ steps.docker-scan.outputs.findingsDetails }}"

  terraform-apply:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Apply"
    needs: ecr-scan
    runs-on: ubuntu-latest
    needs: docker-build-push-ecr
    permissions:
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Upload Configuration
      uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
      id: apply-upload
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        directory: ${{ env.CONFIG_DIRECTORY }}
    - name: Create Apply Run
      uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
      id: apply-run
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
    - name: Apply
      uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
      if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
      id: apply
      with:
        run: ${{ steps.apply-run.outputs.run_id }}
        comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
